{"version":3,"sources":["firebaseAPI.js","components/AuthForm.js","routes/Auth.js","components/NewTwitt.js","components/TwittFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","calssName","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","NewTwitt","newTwittObject","isOwner","editing","setEditing","text","editedNewTwitt","setEditedNewTwitt","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attchmentUrl","toggleEditing","update","evnet","autoFocus","src","class","faTrash","faPencilAlt","TwittFactory","userObject","attachment","setAttachment","newTwitt","setNewTwitt","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","imgFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","alt","faTimes","Home","newTwittes","setNewTwittes","useEffect","onSnapshot","snapshot","twittesArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObject","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fa416d8.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DB_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\nfirebase.initializeApp(firebaseConfig);\n\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, {useState}from 'react';\nimport { authService } from \"../firebaseAPI\";\n\nconst AuthForm = () => {\n  const [ email, setEmail ] = useState(\"\");\n  const [ password, setPassword ] = useState(\"\");\n  const [ newAccount, setNewAccount ] = useState(false);\n  const [ error, setError ] = useState(\"\");\n  const onChange = (event) =>{\n    const {\n        target: { name, value }\n    } = event;\n    if(name === \"email\"){\n        setEmail(value);\n    } else if(name===\"password\"){\n        setPassword(value);\n    }\n  }\n  const onSubmit = async (event) => {\n      event.preventDefault(); // to customize event\n      try {\n          let data;\n          if(newAccount) {\n              data = await authService.createUserWithEmailAndPassword(\n                  email, password\n              )\n          } else {\n              data = await authService.signInWithEmailAndPassword(\n                  email, password\n              )\n          }\n          console.log(data)\n      } catch(error) {\n          console.log(error.message)\n          setError(error.message);\n      }\n  };\n  const toggleAccount = () => setNewAccount(prev=> !prev);\n  return(\n    <>\n    <form onSubmit={onSubmit} className=\"container\">\n      <input \n          name=\"email\"\n          type=\"email\" \n          placeholder=\"Email\" \n          value={email} \n          required\n          onChange={onChange}\n          className=\"authInput\"\n      />\n      <input \n          name=\"password\"\n          type=\"password\" \n          placeholder=\"Password\" \n          value={password}\n          onChange={onChange}\n          required\n          className=\"authInput\"\n      />\n      <input \n        type=\"submit\" \n        value={ newAccount ? \"Create Account\": \"Sign in\" }\n        className=\"authInput authSubmit\"\n      />\n      {error && <span calssName=\"authError\">{error}</span>}\n    </form>\n    <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\" }</span>\n    </>\n  )\n}\n\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"../firebaseAPI\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nconst Auth = ()=>{\n\n    const onSocialClick = async (event) =>{\n        const {\n            target: {\n                name \n            },\n        } = event;\n        let provider;\n        if(name === \"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if(name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n\n    }\n    return(\n      <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n        <AuthForm />\n        <div className=\"authBtns\">\n          <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n            Continue with Google <FontAwesomeIcon icon={faGoogle} />\n          </button>\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n            Continue with Github <FontAwesomeIcon icon={faGithub} />\n          </button>\n          </div>\n      </div>\n    )\n}\nexport default Auth;","import { dbService, storageService } from 'firebaseAPI';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NewTwitt = ({newTwittObject, isOwner}) =>{\n    const [ editing, setEditing ] = useState(false);\n    const [ editedNewTwitt, setEditedNewTwitt] = useState(newTwittObject.text);\n    /* delete */\n    const onDeleteClick = async ()=>{\n        const ok = window.confirm(\"Are you sure, you want to delete this twitt?\");\n        if (ok) {\n            await dbService.doc(`twitter-clone/${newTwittObject.id}`).delete();\n            await storageService.refFromURL(newTwittObject.attchmentUrl).delete();\n        }\n    }\n\n    /* update */\n    const toggleEditing = () => {\n        setEditing(prev=> !prev);\n    }\n    const onSubmit = async (event) =>{\n        event.preventDefault();\n        await dbService.doc(`twitter-clone/${newTwittObject.id}`).update({\n            text : editedNewTwitt\n        });\n        setEditing(false);\n    }\n    const onChange = (evnet) =>{\n        const {\n            target: {value},\n        } = evnet;\n        setEditedNewTwitt(value);\n    }\n    \n  return (\n    <div className=\"nweet\">\n      {\n        editing ? (\n        <>\n        <form onSubmit={onSubmit} className=\"container nweetEdit\">\n          <input\n              type=\"text\"\n              placeholder=\"Edit Your twitt\"\n              value={editedNewTwitt}\n              onChange={onChange}\n              autoFocus\n              className=\"formInput\"\n              required\n          />\n          <input type='submit' value='Update twitt' className=\"formBtn\"/>\n        </form>\n        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n          Cancel\n        </span>\n        </>)\n        :\n        (<>\n        <h4>{newTwittObject.text}</h4>\n        {newTwittObject.attchmentUrl && <img src={newTwittObject.attchmentUrl} />}\n        {\n            isOwner && (\n              <div class=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            )}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default NewTwitt;    ","import React, { useState } from 'react';\nimport { dbService, storageService } from \"firebaseAPI\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TwittFactory = ({ userObject }) => {\n  const [attachment, setAttachment] = useState(\"\");\n  const [newTwitt, setNewTwitt ] = useState(\"\");\n  \n  // if (newTwitt === \"\") {\n  //   return;\n  // }\n\n  // const getNewTwittes = async()=>{\n  //     const dbTwittes = await dbService.collection(\"twitter-clone\").get(); \n\n  //     dbTwittes.forEach(document=>{\n  //         const newTwittesObject = {\n  //             ...document.data(),\n  //             id : document.id,\n  //         }\n  //         setNewTwittes(prev=>[newTwittesObject, ...prev]); // update \n  //          // set have prev! >> so can change easily. to pass func to setFunc\n  //     });\n  // }\n  \n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attchmentUrl ='';\n    // await dbService.collection(\"twitter-clone\").add({\n    //     text : newTwitt,\n    //     createdAt : Date.now(),\n    //     creatorId : userObject.uid,\n    // });\n    // setNewTwitt('');\n    if (attachment !== ''){\n      const attachmentRef = storageService.ref().child(`${userObject.uid}/${uuidv4()}`)\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attchmentUrl = await response.ref.getDownloadURL();\n    }\n    await dbService.collection(\"twitter-clone\").add({\n      text : newTwitt,\n      createdAt : Date.now(),\n      creatorId : userObject.uid,\n      attchmentUrl\n    });\n    setNewTwitt(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n      const { target : {value} , } = event;\n      setNewTwitt(value);\n  }\n  /* file reader API for thumbnail(?) */\n  /* onFileChange, onClearAttachment */\n  const onFileChanage = (event) => {\n    const {\n      target : {files} ,\n    } = event;\n    const imgFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget : { result },\n      } = finishedEvent\n      setAttachment(result)\n      console.log()\n    }\n    if (Boolean(imgFile)) {\n      reader.readAsDataURL(imgFile);\n    }\n  }\n  const onClearAttachment = () => setAttachment(\"\");\n  return(\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={newTwitt}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input \n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChanage}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt='img'\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n        )}\n    </form>\n  )\n\n}\n\nexport default TwittFactory;","import NewTwitt from \"components/NewTwitt\";\nimport TwittFactory from \"components/TwittFactory\";\nimport { dbService } from \"firebaseAPI\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Home = ({userObject})=>{\n    const [newTwittes, setNewTwittes] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"twitter-clone\").onSnapshot(snapshot => {\n            const twittesArray = snapshot.docs.map(doc=> ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            setNewTwittes(twittesArray);\n        })\n    }, [])\n\n    return (\n      <div className=\"container\">\n        <TwittFactory userObject={userObject} />\n          <div style={{ marginTop: 30 }}>\n              {newTwittes.map(newTwitt=>(\n                  <NewTwitt\n                      key={newTwitt.id} \n                      newTwittObject={newTwitt}\n                      isOwner={newTwitt.creatorId === userObject.uid}\n                  />\n              ))}\n          </div>\n        </div>      \n    );\n}\nexport default Home;","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { authService } from \"../firebaseAPI\";\n\nexport default ({ refreshUser, userObject })=> {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObject.displayName);\n    \n    // useEffect(()=>{\n    //   getMyTwittes();\n    // },[]);\n\n    const onLogOutClick = () => {\n        authService.signOut()\n        history.push(\"/\");\n    };\n\n    // const getMyTwittes = async () => {\n    //   const newTwittes = await dbService\n    //     .collection(\"twitter-clone\")\n    //     .where(\"creatorId\", \"==\", userObject.uid) // filtering, querying\n    //     // .orderBy(\"createdAt\")\n    //     .get();\n    // }\n\n    const onChange = (event) => {\n      const {\n        target :{ value },\n      } = event;\n      setNewDisplayName(value);\n    }\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      if (newDisplayName !== userObject.displayName) {\n        await userObject.updateProfile({\n          displayName: newDisplayName,\n        });\n        refreshUser();\n      }\n    }\n\n    return(\n      <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n          <input\n            type='text'\n            onChange={onChange}\n            placeholder='Display name'\n            value={newDisplayName}\n            autoFocus\n            className=\"formInput\"\n          />\n          <input\n            type=\"submit\"\n            value=\"Update Profile\"\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n          />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n          Log Out\n        </span>\n    </div>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObject }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObject.displayName\n                ? `${userObject.displayName}의 Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n     </ul>\n    </nav>\n  )\n}\nexport default Navigation;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObject}) => {\n  return(\n    <Router>\n      {isLoggedIn && <Navigation userObject={userObject} />}\n      <Switch>\n        {isLoggedIn \n          ? \n            (   \n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                  <Home userObject={userObject} />\n              </Route>\n              <Route exact path=\"/profile\">\n                  <Profile userObject={userObject} refreshUser={refreshUser}/>\n              </Route>\n              {/* <Redirect from=\"*\" to =\"/\"/> */}\n            </div>\n            )\n          : \n              (\n              <>\n                  <Route exact path=\"/\">\n                      <Auth />\n                  </Route>\n                  {/* <Redirect from=\"*\" to =\"/\"/> */}\n              </> \n              )\n        } \n      </Switch>\n    </Router>\n  )\n}\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from '../firebaseAPI';\n\nfunction App() {\n  const [ init, setInit ] = useState(false);\n  const [ userObject, setUserObject ] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        /* 1 */\n        setUserObject({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        // setUserObject(user);\n      }else {\n        setUserObject(null);\n      }\n      setInit(true);\n    })\n  }, []);\n  const refreshUser = () => {\n    /* 1 */\n    setUserObject({\n      displayName: authService.currentUser.displayName,\n      uid: authService.currentUser.uid,\n      updateProfile: (args) => authService.currentUser.updateProfile(args),\n    });\n    // setUserObject(Object.assign({}, authService.currentUser));\n  }\n  return (\n    <>\n      { init ? (\n      <AppRouter \n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObject)} \n        userObject={userObject}\n      />): 'initializing...'\n      }\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}